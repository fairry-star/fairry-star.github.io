<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数学竞赛</title>
    <link href="/2024/10/10/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B/"/>
    <url>/2024/10/10/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<p>11月9日数学竞赛</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学竞赛、高等数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数学</title>
    <link href="/2024/10/10/%E9%AB%98%E6%95%B0/"/>
    <url>/2024/10/10/%E9%AB%98%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225164247624.png" alt="image-20250225164247624"></p><h3 id="1-函数-极限-连续"><a href="#1-函数-极限-连续" class="headerlink" title="1.函数   极限  连续"></a>1.函数   极限  连续</h3><h3 id="1-1函数"><a href="#1-1函数" class="headerlink" title="1.1函数"></a>1.1函数</h3><p>常考题型：</p><p><strong>函数的有界性、单调性、周期性、奇偶性判定</strong></p><p><strong>复合函数</strong></p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225163612712.png" alt="image-20250225163612712"></h3><p>当x取二分之派 +2nπ 时xsinx是无界的，cosx&#x3D;0，故无界  P7</p><p>f(-x)&#x3D;f(x)可知是偶函数</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225164610818.png" alt="image-20250225164610818"></p><p>注意X是谁 ，题目中x是内层函数的定义域 复合函数的内层函数的值域是外层函数的定义域。</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225165539038.png" alt="image-20250225165539038"></p><p>注意定义域范围。注意第二部是判断定义域的关键。e的x次方图像</p><h3 id="1-2极限"><a href="#1-2极限" class="headerlink" title="1.2极限"></a>1.2极限</h3><h4 id="1-2-1数列极限"><a href="#1-2-1数列极限" class="headerlink" title="1.2.1数列极限"></a>1.2.1数列极限</h4><p>题型：</p><p><strong>极限的概念性质和存在准则：选择题和证明题递推关系</strong></p><p><strong>求极限</strong></p><p><strong>无穷小量阶的比较</strong></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225171627001.png" alt="image-20250225171627001"></p><p>奇数列和偶数列的极限相等时，才能推出该数列极限。</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225172010452.png" alt="image-20250225172010452"></p><p>解法1：分子分母同时除N</p><p>解法2：夹逼准则</p><p>解法3：极限重要定理</p><p>解法3：有指数取对数（无穷小*有界&#x3D;0）</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225172805363.png" alt="image-20250225172805363"></p><p>证明题是注意利用性质定理。证明不成立时举反例。第二问往往利用第一问的结论。</p><p>第二问同样利用性质定理证明。</p><p>结论：</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250225173047306.png" alt="image-20250225173047306"></p><p>数列的绝对值趋于无穷小，那么去掉绝对值也趋于无穷小</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226215519062.png" alt="image-20250226215519062"></p><p>sin1&#x2F;x的极限不存在所以不可以乘开写。</p><p>性质：</p><p>1.有界性</p><p>收敛（有极限）数列必有界，但有界不一定收敛（收敛），反例（-1的n次方）</p><p><strong>2.保号性</strong><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226201503020.png" alt="image-20250226201503020"></p><p>极限存在准则：</p><p>1.夹逼准则<strong>（n项和）</strong></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226212142439.png" alt="image-20250226212142439"></p><p>阶乘存在可以展开观察。</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226213034509.png" alt="image-20250226213034509"></p><p>2.单调有界准则（递推关系的数列）</p><p>单调增，有上界的数列必有极限</p><p>单调减，有下界的数列必有极限</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226213311194.png" alt="image-20250226213311194"></p><h4 id="1-2-2函数极限"><a href="#1-2-2函数极限" class="headerlink" title="1.2.2函数极限"></a>1.2.2函数极限</h4><p>1）自变量趋于无穷大时函数的极限（分正无穷负无穷）</p><p>有时数列极限（<strong>n只能取正整数</strong>）可以转换成函数极限去计算 因为函数极限可以使用洛必达法则</p><p>例如：sin（πx），sin（nx）。当n趋于无穷时sin（nx）极限为0，sin（πx）为-1到1.</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226184703081.png" alt="image-20250226184703081"></p><p>默认：</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226184832053.png" alt="image-20250226184832053"></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226184926357.png" alt="image-20250226184926357"></p><p>当x趋于无穷时，要分正无穷还是负无穷。当单侧的极限相等时，极限才存在。</p><p>2)自变量趋于有限值时函数的极限<img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226190156207.png" alt="image-20250226190156207"></p><p>自变量只能趋向不能等于，而函数值可以趋向可以等于可以恒等极限。</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226190323194.png" alt="image-20250226190323194"></p><p>当x趋于有限值0时</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226190619319.png" alt="image-20250226190619319"></p><p>不满足趋于零但是不可以等于0，所以不成立。极限不存在</p><p>在0的去心领域时，有的点会使分母为0，没有定义，极限不存在</p><p>3）求极限时分左右极限</p><p>1.分段函数在分界点处的极限</p><p>2.e的无穷次方型</p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226192957716.png" alt="image-20250226192957716" style="zoom:67%;" /><p>3.arctan无穷 型</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226193129331.png" alt="image-20250226193129331"></p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226193418018.png" alt="image-20250226193418018" style="zoom:67%;" /><p>首先是函数极限的变量趋于有限（x趋于1，但是不能等于1，极限存在。符合定理）。</p><p>e的无穷型，要分左右极限，当x趋于1+，e的正无穷&#x3D;正无穷，e的负无穷&#x3D;0.   D</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226194314525.png" alt="image-20250226194314525"></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226195158021.png" alt="image-20250226195158021"></p><p>函数极限（x趋于0.但是取不到）  arctan无穷要分左右极限。重要极限的应用。</p><p>（凑重要极限公式）</p><p>性质：</p><p>1.有界性</p><p>极限存在，则f(x)在x0的某去心邻域有界. 但是有界不一定极限存在。（反例 lim x趋于x0 sin1&#x2F;x)</p><p><strong>2.保号性</strong></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226205636429.png" alt="image-20250226205636429"></p><p><strong>函数极限的保号性例题：</strong></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226210159074.png" alt="image-20250226210159074"></p><p>直接法  间接法（一般函数 和具体函数带入）</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226210501190.png" alt="image-20250226210501190"></p><p>3.极限值与无穷小之间的关系</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226211012692.png" alt="image-20250226211012692"></p><h4 id="1-2-3无穷小-大量"><a href="#1-2-3无穷小-大量" class="headerlink" title="1.2.3无穷小&#x2F;大量"></a>1.2.3无穷小&#x2F;大量</h4><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226214444736.png" alt="image-20250226214444736"></p><p>利用等价公式</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226214548930.png" alt="image-20250226214548930"></p><p>性质：</p><p><strong>有限</strong>个无穷小为无穷小</p><p><strong>有限</strong>个无穷小的极是无穷小</p><p>无穷小乘以有界 （绝对值不超过M）是为无穷小</p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226214848610.png" alt="image-20250226214848610" style="zoom:50%;" /><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20250226220133742.png" alt="image-20250226220133742"></p><p>当x趋向于x0时，函数值要多大有多大（f(x)的绝对值&gt;M）</p><p>常用的无穷大量的比较</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学、高等数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言</title>
    <link href="/2024/10/10/C%E8%AF%AD%E8%A8%80/"/>
    <url>/2024/10/10/C%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="1-scanf的读取标准输入"><a href="#1-scanf的读取标准输入" class="headerlink" title="1.scanf的读取标准输入"></a>1.scanf的读取标准输入</h2><h3 id="1-1scanf不能连续使用（char）"><a href="#1-1scanf不能连续使用（char）" class="headerlink" title="1.1scanf不能连续使用（char）"></a>1.1scanf不能连续使用（char）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">char</span> c;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;i);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,i);<br>    <span class="hljs-built_in">fflush</span>(stdin);<span class="hljs-comment">//清空缓冲区</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;c);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意：scanf是以换行结束执，行下一条语句。不加换换行，直接回车会将换行当做输入。但是scanf、函数在读取整形数、浮点数、字符串会自动忽略空格换行。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-type">char</span> c;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d &quot;</span>,&amp;a);<span class="hljs-comment">//在后面加空格也可以</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a=%d&quot;</span>,a);<br>   <span class="hljs-comment">// fflush(stdin);</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;c);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;c=%c&quot;</span>,c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">char</span> c;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;i);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,i);<br>    <span class="hljs-built_in">fflush</span>(stdin);<span class="hljs-comment">//清空缓冲区</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;c);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,c);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a);<span class="hljs-comment">//a为整数自动忽略</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-2scanf连续输入"><a href="#1-2scanf连续输入" class="headerlink" title="1.2scanf连续输入"></a>1.2scanf连续输入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">char</span> c;<br>    <span class="hljs-type">float</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %c%f&quot;</span>,&amp;i,&amp;c,&amp;a);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;i=%d c=%c a=%f&quot;</span>,i,c,a);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>%c之前必须有空格，否则会报错读取不到数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-type">char</span> c;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d &quot;</span>,&amp;a);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a=%d&quot;</span>,a);<br>    c=<span class="hljs-built_in">char</span>(a);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; %c&quot;</span>,c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>%d后有空格：如果输入 97 后直接按回车键，程序不会结束，而是会等待输入一个空格。只有再输入一个空格后，程序才会继续执行。</p>]]></content>
    
    
    <categories>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语六级</title>
    <link href="/2024/10/10/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7/"/>
    <url>/2024/10/10/%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<p><strong>一、听力部分</strong></p><ol><li>坚持泛听<ul><li>利用碎片时间，如在上下学路上、做家务时等，听英语广播（如 BBC、CNN 等）、英文电影原声、TED 演讲等，让自己沉浸在英语环境中，培养语感。</li><li>不必完全听懂每一个单词，主要是熟悉英语的语音、语调、语速和节奏。</li></ul></li><li>精听真题<ul><li>选择近几年的英语六级真题听力材料，反复听。</li><li>第一遍先整体了解内容，第二遍开始逐句听，听清楚每个单词和句子结构，听不懂的地方暂停回放，直到听懂为止。</li><li>听完后对照听力原文，分析自己没听懂的原因，是单词不认识、发音不熟悉还是语法理解有误。</li></ul></li></ol><p><strong>二、阅读部分</strong></p><ol><li>增加词汇量<ul><li>六级词汇量要求较高，每天坚持背诵一定数量的单词，可以使用单词书、背单词 APP（如百词斩、扇贝单词等）。</li><li>学习单词时，要注意其词性、词义、用法和搭配，尤其是一些高频词汇和词组。</li><li>把单词放在具体的语境中去记忆，例如通过阅读英文文章、例句来加深理解。</li></ul></li><li>提高阅读速度<ul><li>平时阅读英文文章时，有意识地提高阅读速度，可以通过限时阅读训练来实现。</li><li>先快速浏览文章的标题、开头和结尾、段落首句等，了解文章的大致主题和结构。</li><li>然后逐段阅读，抓住关键信息，不必逐字逐句翻译。</li></ul></li><li>分析真题题型<ul><li>仔细研究英语六级阅读真题的题型，如细节题、主旨题、推理题等。</li><li>针对不同题型总结解题技巧，例如细节题要在文章中找到对应的信息点，主旨题要从文章的整体结构和主题句来判断。</li></ul></li></ol><p><strong>三、写作部分</strong></p><ol><li>积累素材<ul><li>背诵一些优秀的英语范文，学习其中的好词好句、文章结构和论证方法。</li><li>关注时事热点、社会问题等，积累相关的英语表达和观点，以便在写作中能够有话可说。</li><li>建立自己的写作素材库，如常用的开头结尾句式、过渡词、名言警句等。</li></ul></li><li>多写多练<ul><li>按照英语六级写作的要求，定期进行写作练习。</li><li>练习时注意时间控制，尽量在规定时间内完成作文。</li><li>写完后对照范文进行修改，分析自己的不足之处，如语法错误、词汇使用不当、逻辑不清晰等。</li></ul></li></ol><p><strong>四、翻译部分</strong></p><ol><li>巩固语法知识<ul><li>翻译对语法要求较高，要系统地复习英语语法，特别是一些复杂的句式结构，如定语从句、状语从句、被动语态等。</li><li>可以通过做语法练习题来加深对语法知识的理解和掌握。</li></ul></li><li>练习真题<ul><li>以英语六级翻译真题为主要练习材料，先自己翻译，然后对照参考答案，分析自己的翻译与参考答案的差异。</li><li>学习参考答案中的翻译技巧和表达方式，如词汇的选择、句式的转换等。</li></ul></li><li>扩大知识面<ul><li>英语六级翻译涉及的内容广泛，包括中国文化、历史、经济、科技等方面。</li><li>平时多阅读一些相关的英文文章和书籍，了解不同领域的知识，增加自己的知识储备。</li></ul></li></ol><p><strong>五、综合学习</strong></p><ol><li>制定学习计划<ul><li>根据自己的实际情况，制定合理的英语六级学习计划。</li><li>明确每天的学习任务和时间安排，确保有足够的时间进行各个部分的学习和练习。</li></ul></li><li>模拟考试<ul><li>定期进行英语六级模拟考试，按照考试时间和要求进行答题。</li><li>模拟考试可以帮助你熟悉考试流程和题型，提高答题速度和准确率，同时也能检测自己的学习效果。</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>英语六级</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo使用</title>
    <link href="/2024/10/10/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/10/10/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h5 id="1-文章"><a href="#1-文章" class="headerlink" title="1.文章"></a>1.文章</h5><p>新建文章：</p><p>hexo new 文章文件名</p><p>发布文章：</p><p>git add “D:\hexo-blogcd\source_posts\name.md”</p><p> git commit -m “name.md 文件”</p><p>新建草稿发布草稿文章：</p><p>hexo new draft 草稿文件名（也可以手动将_drafts目录下的草稿移动到_posts目录下）</p><p>hexo publish 文章文件名</p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20241030212816256.png" alt="image-20241030212816256" style="zoom:67%;" /><h5 id="2-基本操作"><a href="#2-基本操作" class="headerlink" title="2.基本操作"></a>2.基本操作</h5><p> hexo s：浏览localhost4000</p><p> hexo g   hexo d：部署上传</p><h5 id="3-hexo更换主题后，部署在Github-Page无CSS样式"><a href="#3-hexo更换主题后，部署在Github-Page无CSS样式" class="headerlink" title="3.hexo更换主题后，部署在Github Page无CSS样式"></a>3.hexo更换主题后，部署在Github Page无CSS样式</h5><p>在hexo的根目录下_config.yml配置文件中，找到URL部分的配置，修改url选项</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20241030212132689.png" alt="image-20241030212132689"></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20241030212234461.png" alt="image-20241030212234461"></p><p>hexo clean<br>hexo g<br>hexo d # 部署至上线，如 Github Page</p><h5 id="4-显示用户头像"><a href="#4-显示用户头像" class="headerlink" title="4.显示用户头像"></a>4.显示用户头像</h5><p>将图片保存在source下的images文件夹中，修改主题配置文件_config.yml中avatar的url。</p><p>rounded：true（则图片以圆形显示，false以方形显示）</p><p>rotated：true（鼠标放上去，图片会旋转）</p><h5 id="5-为博客插入音乐"><a href="#5-为博客插入音乐" class="headerlink" title="5.为博客插入音乐"></a>5.为博客插入音乐</h5><p>1）</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=29004400&amp;auto=1&amp;height=66"></iframe><p>6.hexo的总访问量不显示</p><p>可能是因为用的LeanCloud（中文版）没有写uri；</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日常记录</title>
    <link href="/2024/09/28/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"/>
    <url>/2024/09/28/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>便签</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章链接</title>
    <link href="/2024/09/27/%E6%96%87%E7%AB%A0%E9%93%BE%E6%8E%A5/"/>
    <url>/2024/09/27/%E6%96%87%E7%AB%A0%E9%93%BE%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
